# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  _id: String!
  user: UserModel!
  text: String!
}

type EventModel {
  _id: String!
  title: String
  photoUrls: [String!]
  description: String
  type: String
  address: String
  tags: [String!]
  going: [UserModel!]
  dateStart: String!
  dateEnd: String!
  price: String!
  security: String!
  date: String
}

type PostModel {
  title: String!
  description: String!
  event: String!
  comments: [Comment!]!
}

type UserModel {
  _id: String!
  name: String!
  password: String
  description: String!
  avatarUrl: String!
  events: [EventModel!]!
  posts: [EventModel!]!
  comments: [Comment!]!
}

type OrganizationModel {
  _id: String!
  name: String!
  description: String!
  events: [EventModel!]!
  posts: [PostModel!]!
  comments: [Comment!]!
}

input CommentInput {
  _id: String!
  user: UserInput!
  text: String!
}

input EventInput {
  _id: String!
  title: String
  photoUrls: [String!]
  description: String
  type: String
  address: String
  tags: [String!]
  going: [UserInput!]
  dateStart: String!
  dateEnd: String!
  price: String!
  security: String!
  date: String
}

input PostInput {
  title: String!
  description: String!
  event: String!
  comments: [CommentInput!]!
}

input UserInput {
  _id: String!
  name: String!
  password: String
  description: String!
  avatarUrl: String!
  events: [EventInput!]!
  posts: [EventInput!]!
  comments: [CommentInput!]!
}

input OrganizationInput {
  _id: String!
  name: String!
  description: String!
  events: [EventInput!]!
  posts: [PostInput!]!
  comments: [CommentInput!]!
}

type Query {
  user(_id: String!): UserModel!
  users(filters: ListUserInput): [UserModel!]!
  comment(_id: String!): Comment!
  events: [EventModel!]!
  event(_id: String!): EventModel!
  org(_id: String!): OrganizationModel!
}

input ListUserInput {
  name: String
  description: String
  avatarUrl: String
}

type Mutation {
  createUser(payload: CreateUserInput!): UserModel!
  updateUser(payload: UpdateUserInput!): UserModel!
  deleteUser(_id: String!): UserModel!
  createComment(payload: CreateCommentInput!): Comment!
  updateComment(payload: UpdateCommentInput!): Comment!
  deleteComment(_id: String!): Comment!
  createEvent(payload: CreateEventInput!): EventModel!
  deleteEvent(_id: String!): EventModel!
  createOrg(payload: CreateOrgInput!): OrganizationModel!
  updateOrg(payload: UpdateOrgInput!): OrganizationModel!
  deleteOrg(_id: String!): OrganizationModel!
}

input CreateUserInput {
  name: String!
  password: String!
  description: String!
  avatarUrl: String!
}

input UpdateUserInput {
  name: String
  description: String
  avatarUrl: String
}

input CreateCommentInput {
  user: UserInput!
  text: String!
}

input UpdateCommentInput {
  user: UserInput!
  text: String
}

input CreateEventInput {
  title: String
  photoUrls: [String!]!
  description: String
  type: String
  dateStart: String!
  dateEnd: String!
  price: String!
  security: String!
  address: String!
  tags: [String!]
  going: [UserInput!]
  date: String
}

input CreateOrgInput {
  name: String!
  description: String!
  events: [EventInput!]!
  posts: [PostInput!]!
  comments: [CommentInput!]!
}

input UpdateOrgInput {
  name: String
  description: String
  events: [EventInput!]
  posts: [PostInput!]!
  comments: [CommentInput!]!
}
